version: '3'

services:
  postgres:
    container_name: postgres
    image: kartoza/postgis:${POSTGIS_VERSION_TAG}
    volumes:
      - geo-db-data:/var/lib/postgresql
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASS: ${POSTGRES_PASS}
      ALLOW_IP_RANGE: ${ALLOW_IP_RANGE}
      FORCE_SSL: TRUE
    restart: on-failure
    healthcheck:
      test: 'exit 0'

  geoserver:
    container_name: geoserver
    image: kartoza/geoserver:${GS_VERSION}
    volumes:
      - geoserver-data:/opt/geoserver/data_dir
    restart: on-failure
    environment:
      GEOSERVER_DATA_DIR: ${GEOSERVER_DATA_DIR}
      GEOWEBCACHE_CACHE_DIR: ${GEOWEBCACHE_CACHE_DIR}
      GEOSERVER_ADMIN_PASSWORD: ${GEOSERVER_ADMIN_PASSWORD}
      GEOSERVER_ADMIN_USER: ${GEOSERVER_ADMIN_USER}
      INITIAL_MEMORY: ${INITIAL_MEMORY}
      MAXIMUM_MEMORY: ${MAXIMUM_MEMORY}
      SAMPLE_DATA: ${SAMPLE_DATA}
      HTTP_SCHEME: ${HTTP_SCHEME}
      HTTP_PROXY_NAME: ${HTTP_PROXY_NAME}
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: curl --fail -s http://localhost:8080/ || exit 1
      interval: 1m30s
      timeout: 10s
      retries: 3

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - 80:80
      - 443:443
    environment:
      NGINX_SERVER_NAME: ${NGINX_SERVER_NAME}
    depends_on:
      geoserver:
        condition: service_healthy
    restart: always
    volumes:
      - ./nginx/config/:/etc/nginx/conf.d/:ro
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw
      - ./nginx/config/:/etc/nginx/conf.d/:rw

volumes:
  geoserver-data:
  geo-db-data:
